{"version":3,"sources":["./src/app/list/conversation-item/conversation-item.component.html","./src/app/list/conversation-item/conversation-item.component.ts","./src/environments/environment.ts","./src/app/back-end.service.ts","./src/app/overview/overview.component.ts","./src/app/overview/overview.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/log-in/log-in.component.ts","./src/app/log-in/log-in.component.html","./src/app/list/list.component.html","./src/app/list/list.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWU,sEAA4B;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,gFAAgB;;;;;IAHhD,yEAC2B;IACzB,yEAAwI;IACtI,oJAAkD;IACpD,4DAAM;IACR,4DAAM;;;IALgC,+LAA0E;IAEzF,0DAAgC;IAAhC,4FAAgC;IAC7C,0DAAoB;IAApB,gFAAoB;;;IAJ9B,sEAAsB;IACtB,+IAKM;IACN,4DAAM;;;IANmB,0DAAW;IAAX,oFAAW;;;;IANtC,mFAA2C;IACzC,oEAAG;IAAA,uDAAuH;IAAA,oEAAG;IAAA,uDAAW;IAAA,4DAAI;IAAC,gFAAoB;IAAA,4DAAI;IACrK,4EAAqF;IAA7E,6UAAwB;IAC9B,2EAAU;IAAA,0EAAe;IAAA,4DAAW;IACtC,4DAAS;IACT,wIAOM;IACR,4DAAmB;;;IAZd,0DAAuH;IAAvH,8OAAuH;IAAG,0DAAW;IAAX,+EAAW;IAIlI,0DAAc;IAAd,iFAAc;;;IASvB,mFAA0C;IACxC,0FACF;IAAA,4DAAmB;;ACVf,MAAM,yBAAyB;IAYpC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QATlD,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAW,IAAI,CAAC;QACvB,SAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAElB,WAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK;YAC3B,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;YACxC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAGvB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YACtD,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;gBACtB,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;oBACrC,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;wBAC3C,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;qBAC/C;iBACF;gBACD,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gBAClE,iCAAiC;gBACjC,KAAK,MAAM,WAAW,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;oBAC7C,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;oBACvB,KAAK,MAAM,WAAW,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,EAAE;wBAC1D,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;4BAChE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;yBACtE;qBACF;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;iBACzE;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACtC,OAAO,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC;gBAC1B,CAAC,CAAC,CAAC,MAAM,CAAC;YACZ,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAyB,EAAE,WAAW;QAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAC,CAAC,CAAC;IAChD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;;kGArDU,yBAAyB;yGAAzB,yBAAyB;QDRrC,2EAAU;QACP,iFAAgB;QAAA,uDAAM;QAAA,4DAAiB;QACvC,gJAamB;QACpB,+IAEmB;QACpB,4DAAW;;QAlBO,0DAAM;QAAN,uEAAM;QACH,0DAAsB;QAAtB,sFAAsB;QAcvB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;AEhB3C;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAA6D;;;AAG7D,MAAM,QAAQ,GAAG,2BAA2B,CAAC;AAItC,MAAM,cAAc;IAOzB,YAA6B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN7C,yCAAyC;QACjC,cAAS,GAAG,KAAK,CAAC;QAC1B,yCAAyC;QACjC,cAAS,GAAG,EAAE,CAAC;QACvB,yCAAyC;QACjC,cAAS,GAAG,EAAE,CAAC;IAGvB,CAAC;IACM,mBAAmB;QACxB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,aAAa,EAAE,SAAS,GAAG,IAAI,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;aACtE,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,QAAQ,gBAAgB,EAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IAEM,gBAAgB,CAAC,EAAE;QACxB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,aAAa,EAAE,SAAS,GAAG,IAAI,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;aACtE,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,QAAQ,gBAAgB,GAAG,GAAG,GAAG,EAAE,EAAC,WAAW,CAAC,CAAC;IACjF,CAAC;IACM,MAAM,CAAC,QAAQ,EAAE,QAAQ;QAC9B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,aAAa,EAAE,SAAS,GAAG,IAAI,CAAE,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC;aAC5D,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,QAAQ,SAAS,EAAG,WAAW,CAAC,CAAC;IACnE,CAAC;IAED,IAAI,QAAQ;QACV,OAAQ,YAAY,CAAC,OAAO,CAAC,UAAU,CAAwB,CAAC;IAClE,CAAC;IACD,IAAI,QAAQ,CAAC,KAAc;QACzB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,QAAQ,CAAC,KAAa;QACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,QAAQ,CAAC,KAAa;QACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;;4EA/DU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,MAAM,iBAAiB;IAS5B,YAAoB,cAA8B,EAAmB,MAAc;QAA/D,mBAAc,GAAd,cAAc,CAAgB;QAAmB,WAAM,GAAN,MAAM,CAAQ;QACjF,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;YAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAGD,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;YAClD,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAEhB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,iCAAiC;gBACjC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;oBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;iBAC1D;gBACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACxB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC5E,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjE,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;kFA5CU,iBAAiB;iGAAjB,iBAAiB;QCX9B,2EAAU;QACR,iFAAgB;QACd,qEACF;QAAA,4DAAiB;QACjB,mFAAkB;QAChB,oEAAG;QACD,uDAEF;QAAA,4DAAI;QACN,4DAAmB;QACrB,4DAAW;QACX,sEAAqB;;QALf,0DAEF;QAFE,sOAEF;;;;;;;;;;;;;;;;;;;;ACDG,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAAe;QACb,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,oEAAyC;QAC3C,4DAAM;QACN,8EACgB;;;;;;;;;;;;;;ACJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACb;AACZ;AACD;AACC;AACD;AAC4C;AAC5C;AACI;AACO;AACC;AACN;AACJ;AACI;AACR;;AA4B5C,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAfJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,oEAAa;YACb,oEAAa;YACb,qEAAa;YACb,yEAAe;YACf,gFAAkB;YAClB,iFAAmB;YACnB,2EAAmB;YACnB,uEAAc;YACd,mEAAmB;SACpB;oIAIU,SAAS,mBAxBlB,2DAAY;QACZ,8EAAiB;QACjB,kEAAa;QACb,6GAAyB;QACzB,wEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,qEAAa;QACb,yEAAe;QACf,gFAAkB;QAClB,iFAAmB;QACnB,2EAAmB;QACnB,uEAAc;QACd,mEAAmB;;;;;;;;;;;;;ACzCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;;;;;;;;;;AAU3D,MAAM,cAAc;IAKzB,YAAoB,OAAuB,EAAU,IAAgB,EAAmB,MAAc;QAAlF,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAmB,WAAM,GAAN,MAAM,CAAQ;QACpG,IAAI,OAAO,CAAC,QAAQ,EAAC;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,wDAAS,CAAC;YAC1B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC1D,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrC;YACH,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;YACb,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;4EA/BU,cAAc;8FAAd,cAAc;QCX3B,yEAAsB;QACpB,2EAAU;QACR,iFAAgB;QAAA,mEAAQ;QAAA,4DAAiB;QACzC,0EAAqD;QAA1B,0IAAY,gBAAY,IAAC;QAClD,oFAA2C;QACzC,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,2EAC+B;QADxB,oLAAsB;QAA7B,4DAC+B;QACjC,4DAAiB;QACjB,gEAAI;QACJ,qFAA2C;QACzC,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAC+B;QADxB,qLAAsB;QAA7B,4DAC+B;QACjC,4DAAiB;QACjB,iEAAI;QACJ,6EAAwD;QAAA,qEAAS;QAAA,4DAAS;QAC5E,4DAAO;QACT,4DAAW;QACb,4DAAM;;QAhBI,0DAAoB;QAApB,iFAAoB;QAGf,0DAAsB;QAAtB,iFAAsB;QAMtB,0DAAsB;QAAtB,iFAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICHrC,sFAEwB;;;IAFD,qEAAS;;ACAzB,MAAM,aAAa;IAUxB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;YAClD,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAEhB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,iCAAiC;gBACjC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;oBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/B,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;iBAC1D;gBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChD,OAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,GAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,CAAC;gBAC/G,CAAC,CAAC,CAAC;gBAEH,yCAAyC;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrD;YACH,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjE,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAC;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBAC3C,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;YAChI,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrB,OAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,GAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,CAAC;YAC/G,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,yCAAyC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;SACF;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBAC3C,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;YACpE,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrB,OAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,GAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAS,CAAC;YAC/G,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,yCAAyC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;SACF;IACH,CAAC;;0EA9EU,aAAa;6FAAb,aAAa;QDT1B,oFAAkC;QAChC,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,0FAA6C;QAC3C,2EAA2F;QAArC,oJAAc,yBAAqB,IAAC;QAA1F,4DAA2F;QAC3F,2EAAqF;QAAnC,oJAAc,uBAAmB,IAAC;QAApF,4DAAqF;QACvF,4DAAuB;QACvB,sFAAwE;QACxE,4FAAuD;QACzD,4DAAiB;QACjB,6IAEwB;;;QATA,0DAAsB;QAAtB,4EAAsB;QAIX,0DAAc;QAAd,oEAAc;QAGD,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;AERzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACS;AACP;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8EAAiB,EAAE;IACnD,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAc,EAAC;CACtC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACZuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":[" <mat-card>\n    <mat-card-title>{{id}}</mat-card-title>\n    <mat-card-content *ngIf=\"nOfMess !== null\">\n      <p>{{date.getDate()}}. {{months[date.getMonth()]}}. {{date.getFullYear()}}  {{date.getHours()}}:{{date.getMinutes()}} und <b>{{nOfMess}}</b> Nachrichten vom User</p>\n      <button (click)=\"showHideChat()\" mat-icon-button color=\"primary\" aria-label=\"Button\">\n        <mat-icon>question_answer</mat-icon>\n      </button>\n      <div *ngIf=\"showChat\">\n      <div *ngFor=\"let message of messages\" [ngClass]=\"{'mine':message.from == 'user','others':message.from == 'bot'}\"\n           class=\"mine messages\">\n        <div class=\"message\" [ngSwitch]=\"message.messageType\" [ngClass]=\"{'tri-right':message.from == 'user','tri-left':message.from == 'bot'}\">\n          <div *ngSwitchCase=\"'text'\">{{message.text}}</div>\n        </div>\n      </div>\n      </div>\n    </mat-card-content>\n   <mat-card-content *ngIf=\"nOfMess == null\">\n     Einen Moment geduld bitte ...\n   </mat-card-content>\n  </mat-card>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BackEndService} from '../../back-end.service';\n\n@Component({\n  selector: 'app-conversation-item',\n  templateUrl: './conversation-item.component.html',\n  styleUrls: ['./conversation-item.component.scss']\n})\nexport class ConversationItemComponent implements OnInit {\n\n  message: JSON;\n  showChat = false;\n  messages = [];\n  nOfMess: number = null;\n  date = new Date();\n  @Input() id: string;\n  months = ['Jan', 'Feb', 'Mar',\n    'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep',\n    'Oct', 'Nov', 'Dez'];\n\n  constructor(private backEndService: BackEndService) {\n  }\n\n  ngOnInit(): void {\n    this.getConversation();\n  }\n\n  getConversation(): void {\n    this.backEndService.getConversations(this.id).subscribe({\n      next: res => {\n        this.message = res;\n        const map = new Map();\n        for (const messageKey in this.message) {\n          if (this.message.hasOwnProperty(messageKey)) {\n            map.set(messageKey, this.message[messageKey]);\n          }\n        }\n        this.date = new Date(Number(map.get('latest_event_time')) * 1000);\n        // tslint:disable-next-line:forin\n        for (const messagesKey in map.get('messages')) {\n          const map2 = new Map();\n          for (const messageKey2 in map.get('messages')[messagesKey]) {\n            if (map.get('messages')[messagesKey].hasOwnProperty(messageKey2)) {\n              map2.set(messageKey2, map.get('messages')[messagesKey][messageKey2]);\n            }\n          }\n          this.addMessage(map2.get('type'), map2.get('text'), 'received', 'text');\n        }\n        this.nOfMess = this.messages.filter(i => {\n          return i.from !== 'bot';\n        }).length;\n      }\n    });\n  }\n\n  public addMessage(from, text, type: 'received' | 'sent', messageType): void {\n    this.messages.push({from, text, messageType});\n  }\n\n  showHideChat(): void {\n    this.showChat = !this.showChat;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nconst BASE_URL = 'http://localhost:8080/api';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackEndService {\n  // tslint:disable-next-line:variable-name\n  private _signedIn = false;\n  // tslint:disable-next-line:variable-name\n  private _username = '';\n  // tslint:disable-next-line:variable-name\n  private _password = '';\n  constructor(private readonly http: HttpClient) {\n\n  }\n  public getAllConversations(): Observable<JSON> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ' Basic ' + btoa( this.username + ':' + this.password)\n      })\n    };\n    return this.http.get<JSON>(`${BASE_URL}/conversations`,httpOptions);\n  }\n\n  public getConversations(id): Observable<JSON> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ' Basic ' + btoa( this.username + ':' + this.password)\n      })\n    };\n    return this.http.get<JSON>(`${BASE_URL}/conversations` + '/' + id,httpOptions);\n  }\n  public signIn(username, password): Observable<string>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ' Basic ' + btoa( username + ':' + password)\n      })\n    };\n    return this.http.get<string>(`${BASE_URL}/signin`,  httpOptions);\n  }\n\n  get signedIn(): boolean {\n    return (localStorage.getItem('signedIn') as unknown) as boolean;\n  }\n  set signedIn(value: boolean) {\n    localStorage.setItem('signedIn', 'true');\n    this._signedIn = value;\n  }\n\n  get username(): string {\n    return localStorage.getItem('username');\n  }\n\n  set username(value: string) {\n    localStorage.setItem('username', value);\n    this._username = value;\n  }\n\n  get password(): string {\n    return localStorage.getItem('password');\n  }\n\n  set password(value: string) {\n    localStorage.setItem('password', value);\n    this._password = value;\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BackEndService} from '../back-end.service';\nimport {Observable} from 'rxjs';\nimport {count} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  list: JSON;\n  out: string;\n  messPerS: Array<number>;\n  avg: string;\n  count: number;\n  sum: number;\n\n  constructor(private backEndService: BackEndService, private readonly router: Router) {\n    if (!backEndService.signedIn) {\n      router.navigate(['signIn']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.getConversations();\n  }\n\n\n  getConversations(): void {\n    this.backEndService.getAllConversations().subscribe({\n      next: res => {\n        this.list = res;\n\n        this.out = '';\n        this.messPerS = [];\n        this.count = 0;\n        // tslint:disable-next-line:forin\n        for (const listKey in this.list) {\n          this.messPerS.push(Number(this.list[listKey]));\n          this.count++;\n          this.out += listKey + ' ' + this.list[listKey] + ' <br>';\n        }\n        this.sum = 0;\n        this.messPerS.forEach(i => {\n          this.sum += i;\n        });\n        this.avg = (this.sum / this.messPerS.length).toFixed(2).replace('.', ',');\n      },\n      error: err => {\n        console.log('Error: ' + err.error.error + '' + err.error.text);\n      }\n    });\n  }\n\n}\n","<mat-card>\n  <mat-card-title>\n    Overview\n  </mat-card-title>\n  <mat-card-content>\n    <p>\n      {{avg}} Nachrichten schreiben die Leute im Durschnitt und insgesamt wurden in {{count}} Unterhaltungen\n      bereits {{sum}} Nachrichten geschrieben\n    </p>\n  </mat-card-content>\n</mat-card>\n<app-list></app-list>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'leonDashboard';\n}\n","<div id=\"leon\">\n  <h1>Leon Dashboard</h1>\n  <img src=\"assets/leon.png\" height=\"80px\">\n</div>\n<router-outlet style=\"clear: right\">\n</router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverviewComponent } from './overview/overview.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatCardModule} from '@angular/material/card';\nimport { ListComponent } from './list/list.component';\nimport {MatListModule} from '@angular/material/list';\nimport { ConversationItemComponent } from './list/conversation-item/conversation-item.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport { LogInComponent } from './log-in/log-in.component';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OverviewComponent,\n    ListComponent,\n    ConversationItemComponent,\n    LogInComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {BackEndService} from '../back-end.service';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.scss']\n})\nexport class LogInComponent implements OnInit {\n\n  myForm: FormGroup;\n  userName: string;\n  password: string;\n  constructor(private backEnd: BackEndService, private http: HttpClient, private readonly router: Router) {\n    if (backEnd.signedIn){\n      this.router.navigate(['dashboard']);\n    }\n    this.myForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitForm(): void {\n    this.backEnd.signIn(this.userName, this.password).subscribe({\n      next: res => {\n        if (res) {\n          this.backEnd.signedIn = true;\n          this.backEnd.username = this.userName;\n          this.backEnd.password = this.password;\n          this.router.navigate(['dashboard']);\n        }\n      },\n      error: err => {\n      }\n    });\n  }\n}\n","<div class=\"main-div\">\n  <mat-card>\n    <mat-card-title>Sign In:</mat-card-title>\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"submitForm()\">\n      <mat-form-field class=\"\" appearance=\"fill\">\n        <mat-label>Username:</mat-label>\n        <input [(ngModel)]=\"userName\" formControlName=\"username\" required matInput placeholder=\"Username\"\n               autocomplete=\"username\">\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"\" appearance=\"fill\">\n        <mat-label>Password:</mat-label>\n        <input [(ngModel)]=\"password\" matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\"\n               autocomplete=\"password\">\n      </mat-form-field>\n      <br>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Einloggen</button>\n    </form>\n  </mat-card>\n</div>\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Datumspicker</mat-label>\n  <mat-date-range-input [rangePicker]=\"picker\">\n    <input matStartDate matInput placeholder=\"Start date\" (dateChange)=\"onChangeStart($event)\">\n    <input matEndDate matInput placeholder=\"End date\" (dateChange)=\"onChangeEnd($event)\">\n  </mat-date-range-input>\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-date-range-picker #picker></mat-date-range-picker>\n</mat-form-field>\n<app-conversation-item [id]=\"id\" *ngFor=\"let id of messID\">\n\n</app-conversation-item>\n\n","import { Component, OnInit } from '@angular/core';\nimport {BackEndService} from '../back-end.service';\nimport {DateRange, ExtractDateTypeFromSelection, MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  list: JSON;\n  out: string;\n  private startDate: Date;\n  private endDate: Date;\n  messPerS: Array<number>;\n  messID: Array<string>;\n  messages: Array<JSON>;\n  tempMessIds: Array<string>;\n\n  constructor(private backEndService: BackEndService) { }\n\n  ngOnInit(): void {\n    this.getConversations();\n  }\n\n  getConversations(): void {\n    this.backEndService.getAllConversations().subscribe({\n      next: res => {\n        this.list = res;\n\n        this.out = '';\n        this.messPerS = [];\n        this.messID = [];\n        this.tempMessIds = [];\n        // tslint:disable-next-line:forin\n        for (const listKey in this.list) {\n          this.messPerS.push(Number(this.list[listKey]));\n          this.tempMessIds.push(listKey);\n          this.out += listKey + ' ' + this.list[listKey] + ' <br>';\n        }\n        this.tempMessIds = this.tempMessIds.sort((a, b) => {\n          return (new Date(Number(b.split('|')[1]) * 1000) as any) - (new Date(Number(a.split('|')[1]) * 1000) as any);\n        });\n\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.tempMessIds.length; i++) {\n          this.messID.push(this.tempMessIds[i].split('|')[0]);\n        }\n      },\n      error: err => {\n        console.log('Error: ' + err.error.error + '' + err.error.text);\n      }\n    });\n  }\n\n  onChangeEnd(event): void{\n    if (event.value != null){\n      this.endDate = event.value;\n      const tempList = this.tempMessIds.filter(i => {\n        return new Date(Number(i.split('|')[1]) * 1000) <= this.endDate && new Date(Number(i.split('|')[1]) * 1000) >= this.startDate;\n      });\n      tempList.sort((a, b) => {\n        return (new Date(Number(b.split('|')[1]) * 1000) as any) - (new Date(Number(a.split('|')[1]) * 1000) as any);\n      });\n      this.messID = [];\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < tempList.length; i++) {\n        this.messID.push(tempList[i].split('|')[0]);\n      }\n    }\n  }\n\n  onChangeStart(event): void {\n    if (event.value != null){\n      this.startDate = event.value;\n      const tempList = this.tempMessIds.filter(i => {\n        return new Date(Number(i.split('|')[1]) * 1000) >= this.startDate;\n      });\n      tempList.sort((a, b) => {\n        return (new Date(Number(b.split('|')[1]) * 1000) as any) - (new Date(Number(a.split('|')[1]) * 1000) as any);\n      });\n      this.messID = [];\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < tempList.length; i++) {\n        this.messID.push(tempList[i].split('|')[0]);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {OverviewComponent} from './overview/overview.component';\nimport {LogInComponent} from './log-in/log-in.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: OverviewComponent },\n  {path: '', component: LogInComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}